From 74d90b4683ab3248fe2f3ee1154fe552a6d4f4a8 Mon Sep 17 00:00:00 2001
From: rjd <3246251196ryan@gmail.com>
Date: Fri, 12 Jan 2024 00:15:23 +0000
Subject: [PATCH 19/20] Provide clib4 as an additional C runtime library.

As well as the existing newlib and clib2 as C runtime library choices,
clib4 is now introduced.
---
 gcc/config/rs6000/amigaos.h           | 43 ++++++++++++++++++++-------
 gcc/config/rs6000/t-amigaos           |  4 +--
 libstdc++-v3/configure                | 15 ++++++++++
 libstdc++-v3/crossconfig.m4           | 12 ++++++++
 libstdc++-v3/include/c_global/cstdlib |  4 +--
 5 files changed, 64 insertions(+), 14 deletions(-)

diff --git a/gcc/config/rs6000/amigaos.h b/gcc/config/rs6000/amigaos.h
index e8303292ee8cc06a410fb4acc0390f13c96444c9..51ac3583c76b8c0edcd8a2ab606fa0066adcc080 100644
--- a/gcc/config/rs6000/amigaos.h
+++ b/gcc/config/rs6000/amigaos.h
@@ -111,12 +111,17 @@
       else if (IS_MCRT("clib2") || IS_MCRT("clib2-ts")) \
         {					\
           builtin_define_std ("CLIB2");		\
           if (IS_MCRT("clib2-ts"))		\
             builtin_define ("__THREAD_SAFE");	\
         }					\
+      else if (IS_MCRT("clib4"))		\
+        {					\
+          builtin_define_std ("CLIB4");		\
+          builtin_define ("CLIB4");		\
+        }					\
       else if (IS_MCRT("ixemul"))		\
         {					\
           builtin_define_std ("ixemul");	\
           builtin_define_std ("IXEMUL");	\
         }					\
       else if (IS_MCRT("libnix"))		\
@@ -155,28 +160,18 @@
 #undef REAL_LIBGCC_SPEC
 #define REAL_LIBGCC_SPEC "\
 %{static|static-libgcc: %{!use-dynld: -lgcc -lgcc_eh} %{use-dynld: -lgcc} }%{!static:%{!static-libgcc:%{!shared:%{!shared-libgcc: %{!use-dynld: -lgcc -lgcc_eh} %{use-dynld: -lgcc}}%{shared-libgcc:-lgcc}}%{shared:%{shared-libgcc:-lgcc}%{!shared-libgcc:-lgcc}}}}"
 
 
 /* make newlib the default */
-#if 1
 #define CPP_AMIGA_DEFAULT_SPEC "%{mcrt=default|!mcrt=*:%<mcrt=default -mcrt=newlib} %(cpp_newlib)"
 #define LINK_AMIGA_DEFAULT_SPEC "%(link_newlib)"
 #define STARTFILE_AMIGA_DEFAULT_SPEC "%(startfile_newlib)"
 #define ENDFILE_AMIGA_DEFAULT_SPEC "%(endfile_newlib)"
 #undef MULTILIB_DEFAULTS
 #define MULTILIB_DEFAULTS {"mcrt=newlib"}
-#else
-/* make clib2 the default */
-#define CPP_AMIGA_DEFAULT_SPEC "%{mcrt=default|!mcrt=*:%<mcrt=default -mcrt=clib2} %(cpp_clib2)"
-#define LINK_AMIGA_DEFAULT_SPEC "%(link_clib2)"
-#define STARTFILE_AMIGA_DEFAULT_SPEC "%(startfile_clib2)"
-#define ENDFILE_AMIGA_DEFAULT_SPEC "%(endfile_clib2)"
-#undef MULTILIB_DEFAULTS
-#define MULTILIB_DEFAULTS {"mcrt=clib2"}
-#endif
 
 
 /* For specifying the include system paths, we generally use -idirafter so the include
  * paths are added at the end of the gcc default include paths. This is required for
  * fixincludes and libstdc++ to work properly
  */
@@ -201,12 +196,30 @@
                  "%{!msoft-float:%(lib_subdir_type)}/crt0.o"
 
 #define ENDFILE_CLIB2_SPEC "\
 %(base_sdk)clib2/%{mcrt=clib2-ts:lib.threadsafe; :lib}" \
                  "%{!msoft-float:%(lib_subdir_type)}/crtend.o"
 
+/* clib4 */
+
+#define CPP_CLIB4_SPEC "\
+-idirafter %(base_sdk)clib4/include -idirafter %(base_sdk)local/clib4/include"
+
+#define LIB_SUBDIR_CLIB4_SPEC "lib%(lib_subdir_type)"
+
+#define LINK_CLIB4_SPEC "\
+-L%(base_sdk)clib4/%(lib_subdir_clib4) \
+-L%(base_gcc)lib/gcc/ppc-amigaos/%(version)/clib4/lib%(lib_subdir_type) \
+-L%(base_sdk)local/clib4/%(lib_subdir_clib4)"
+
+#define STARTFILE_CLIB4_SPEC "\
+%{shared: %(base_sdk)clib4/%(lib_subdir_clib4)/shcrtbegin.o} %{!shared: %(base_sdk)clib4/%(lib_subdir_clib4)/crtbegin.o} %{!shared: %(base_sdk)clib4/%(lib_subdir_clib4)/crt0.o}"
+
+#define ENDFILE_CLIB4_SPEC "\
+%{shared: %(base_sdk)clib4/%(lib_subdir_clib4)/shcrtend.o} %{!shared: %(base_sdk)clib4/%(lib_subdir_clib4)/crtend.o}"
+
 /* ixemul */
 
 #define CPP_IXEMUL_SPEC "\
 -idirafter %(base_sdk)ixemul/include -idirafter %(base_sdk)local/ixemul/include"
 
 #define LIB_SUBDIR_IXEMUL_SPEC "lib%(lib_subdir_type)"
@@ -256,12 +269,13 @@
 
 /* End clib specific */
 
 #undef CPP_OS_DEFAULT_SPEC
 #define CPP_OS_DEFAULT_SPEC "\
 %{mcrt=clib2|mcrt=clib2-ts: %(cpp_clib2); \
+mcrt=clib4: %(cpp_clib4); \
 mcrt=ixemul: %(cpp_ixemul); \
 mcrt=libnix: %(cpp_libnix); \
 mcrt=newlib: %(cpp_newlib); \
 mcrt=default|!mcrt=*: %{mcrt=default|!nostdinc: %(cpp_amiga_default)}; \
 : %eInvalid C runtime library} \
 %{!nostdinc: -idirafter %(base_sdk)include/include_h -idirafter %(base_sdk)include/netinclude -idirafter %(base_sdk)local/common/include} \
@@ -275,12 +289,13 @@ mcrt=default|!mcrt=*: %{mcrt=default|!nostdinc: %(cpp_amiga_default)}; \
 -q -d %{h*} %{v:-V} %{G*} \
 %{Wl,*:%*} %{YP,*} %{R*} \
 %{Qy:} %{!Qn:-Qy} \
 %(link_shlib) %(link_text) \
 %{mbaserel: %{msdata|msdata=default|msdata=sysv: %e-mbaserel and -msdata options are incompatible}} \
 %{mcrt=clib2|mcrt=clib2-ts: %(link_clib2); \
+mcrt=clib4: %(link_clib4); \
 mcrt=ixemul: %(link_ixemul); \
 mcrt=libnix: %(link_libnix); \
 mcrt=newlib: %(link_newlib); \
 mcrt=default|!mcrt=*: %(link_amiga_default); \
 : %eInvalid C runtime library} \
 -L%(base_sdk)local/common/lib%(lib_subdir_type) \
@@ -297,21 +312,23 @@ mcrt=default|!mcrt=*: %(link_amiga_default); \
 #define LINK_SHLIB "\
 %{shared:-shared -dy --defsym __dynld_version__=1} %{!shared: %{static:-static}} %{use-dynld: -dy}"
 
 #undef STARTFILE_SPEC
 #define STARTFILE_SPEC "\
 %{mcrt=clib2|mcrt=clib2-ts: %(startfile_clib2); \
+mcrt=clib4: %(startfile_clib4); \
 mcrt=ixemul: %(startfile_ixemul); \
 mcrt=libnix: %(startfile_libnix); \
 mcrt=newlib: %(startfile_newlib); \
 mcrt=default|!mcrt=*: %(startfile_amiga_default); \
 : %eInvalid C runtime library}"
 
 #undef ENDFILE_SPEC
 #define ENDFILE_SPEC "\
 %{mcrt=clib2|mcrt=clib2-ts: %(endfile_clib2); \
+mcrt=clib4: %(endfile_clib4); \
 mcrt=ixemul: %(endfile_ixemul); \
 mcrt=libnix: %(endfile_libnix); \
 mcrt=newlib: %(endfile_newlib); \
 mcrt=default|!mcrt=*: %(endfile_amiga_default); \
 : %eInvalid C runtime library}"
 
@@ -336,12 +353,18 @@ mcrt=default|!mcrt=*: %(endfile_amiga_default); \
   /* clib2 */ \
   {"cpp_clib2", CPP_CLIB2_SPEC}, \
   {"lib_subdir_clib2", LIB_SUBDIR_CLIB2_SPEC}, \
   {"link_clib2", LINK_CLIB2_SPEC}, \
   {"startfile_clib2", STARTFILE_CLIB2_SPEC}, \
   {"endfile_clib2", ENDFILE_CLIB2_SPEC}, \
+  /* clib4 */ \
+  {"cpp_clib4", CPP_CLIB4_SPEC}, \
+  {"lib_subdir_clib4", LIB_SUBDIR_CLIB4_SPEC}, \
+  {"link_clib4", LINK_CLIB4_SPEC}, \
+  {"startfile_clib4", STARTFILE_CLIB4_SPEC}, \
+  {"endfile_clib4", ENDFILE_CLIB4_SPEC}, \
   /* ixemul */ \
   {"cpp_ixemul", CPP_IXEMUL_SPEC}, \
   {"lib_subdir_ixemul", LIB_SUBDIR_IXEMUL_SPEC}, \
   {"link_ixemul", LINK_IXEMUL_SPEC}, \
   {"startfile_ixemul", STARTFILE_IXEMUL_SPEC}, \
   {"endfile_ixemul", ENDFILE_IXEMUL_SPEC}, \
diff --git a/gcc/config/rs6000/t-amigaos b/gcc/config/rs6000/t-amigaos
index 15d9d3fd5a5f0c8109cd158242745fa52b19257e..0d8049f400ca7f0937330ffec4f01546d9d61cc2 100644
--- a/gcc/config/rs6000/t-amigaos
+++ b/gcc/config/rs6000/t-amigaos
@@ -12,9 +12,9 @@ LIMITS_H_TEST = true
 NATIVE_SYSTEM_HEADER_DIR=/gcc/include
 #OTHER_FIXINCLUDES_DIRS=${gcc_tooldir}/include
 
 # Build the libraries for both newlib and clib2
 # We do not build soft float flavours as none of the
 # libs support soft floats
-MULTILIB_OPTIONS = mcrt=newlib/mcrt=clib2
-MULTILIB_DIRNAMES = newlib clib2
+MULTILIB_OPTIONS = mcrt=newlib/mcrt=clib2/mcrt=clib4
+MULTILIB_DIRNAMES = newlib clib2 clib4
 #MULTILIB_REUSE = =mcrt=newlib
diff --git a/libstdc++-v3/configure b/libstdc++-v3/configure
index 1aec69f6af1aa823b38945effc886b4c33cb917c..0d57356933cb71f4c2debf6790b607b5cd3b5296 100755
--- a/libstdc++-v3/configure
+++ b/libstdc++-v3/configure
@@ -78415,12 +78415,27 @@ $as_echo "$ac_ld_relro" >&6; }
     OPT_LDFLAGS="-Wl,-O1 $OPT_LDFLAGS"
   fi
 
 
 
 
+
+
+    for ac_func in acosf asinf atan2f atanf ceilf cosf coshf expf fabsf floorf fmodf frexpf sqrtf hypotf ldexpf log10f logf modff powf sinf sinhf tanf tanhf fabsl acosl asinl atanl atan2l ceill cosl coshl expl floorl fmodl frexpl sqrtl hypotl ldexpl logl log10l modfl powl sinl sinhl tanl tanhl
+do :
+  as_ac_var=`$as_echo "ac_cv_func_$ac_func" | $as_tr_sh`
+ac_fn_c_check_func "$LINENO" "$ac_func" "$as_ac_var"
+if eval test \"x\$"$as_ac_var"\" = x"yes"; then :
+  cat >>confdefs.h <<_ACEOF
+#define `$as_echo "HAVE_$ac_func" | $as_tr_cpp` 1
+_ACEOF
+
+fi
+done
+
+
     ;;
   *)
     as_fn_error "No support for this host/target combination." "$LINENO" 5
    ;;
 esac
 
diff --git a/libstdc++-v3/crossconfig.m4 b/libstdc++-v3/crossconfig.m4
index bcb83c81017bfb5496431f8b7f60018cfee93df9..12ee02548bcd4138ca3e6a3e1b291e6240029102 100644
--- a/libstdc++-v3/crossconfig.m4
+++ b/libstdc++-v3/crossconfig.m4
@@ -274,12 +274,24 @@ case "${host}" in
     AC_CHECK_HEADERS([nan.h ieeefp.h endian.h sys/isa_defs.h \
       machine/endian.h machine/param.h sys/machine.h sys/types.h \
       fp.h locale.h float.h inttypes.h])
     SECTION_FLAGS='-ffunction-sections -fdata-sections'
     AC_SUBST(SECTION_FLAGS)
     GLIBCXX_CHECK_LINKER_FEATURES
+
+dnl # Although we are cross compiling for Amiga, we already built the
+dnl # first stage compiler: the compiler without any libraries such as
+dnl # libstdc++. This means that we DO have access to AC_CHECK_FUNCS
+dnl # as all the CRTs have been built and installed at the point of
+dnl # running the configure file for libstdc++-v3.
+dnl #
+dnl # Adding checks here:
+
+dnl #
+    AC_CHECK_FUNCS(acosf asinf atan2f atanf ceilf cosf coshf expf fabsf floorf fmodf frexpf sqrtf hypotf ldexpf log10f logf modff powf sinf sinhf tanf tanhf fabsl acosl asinl atanl atan2l ceill cosl coshl expl floorl fmodl frexpl sqrtl hypotl ldexpl logl log10l modfl powl sinl sinhl tanl tanhl)
+
     ;;
   *)
     AC_MSG_ERROR([No support for this host/target combination.])
    ;;
 esac
 ])
diff --git a/libstdc++-v3/include/c_global/cstdlib b/libstdc++-v3/include/c_global/cstdlib
index 66862e087ee9abee00a6bb06cad058e489d01cdc..09d99212541ff9d456e5c7f0d11632fe5e1b67c4 100644
--- a/libstdc++-v3/include/c_global/cstdlib
+++ b/libstdc++-v3/include/c_global/cstdlib
@@ -208,14 +208,14 @@ _GLIBCXX_END_NAMESPACE_VERSION
 #undef lldiv
 #undef atoll
 #undef strtoll
 #undef strtoull
 #undef strtof
 
-/* Neigther clib2 nor newlib offers strtoud() */
-#ifndef __amigaos4__
+/* clib2 and newlib do not provide an implementation of strtold */
+#if !defined (__amigaos4__) || defined(__CLIB4__)
 #undef strtold
 #endif
 
 namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
 {
 _GLIBCXX_BEGIN_NAMESPACE_VERSION
-- 
2.34.1

